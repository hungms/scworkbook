{"title":"CellRanger (Multi)","markdown":{"yaml":{"title":"CellRanger (Multi)","author":[{"name":"Matthew Hung"}],"date":"last-modified","format":{"html":{"toc":true,"toc-expand":1,"number-sections":true,"number-offset":3}}},"headingText":"Motivation","headingAttr":{"id":"","classes":["unnumbered"],"keyvalue":[]},"containsRefs":false,"markdown":"\n\nIntroduction to CellRanger\n\n## Retrieve Raw Sequencing Files\n\nIn this section, we will download the relevant sequencing samples (CV10, CV12) highlighted in [@sec-Introduction] with the respective BioProject ID : \n[PRJNA1040901]() & [PRJNA1040899](). Since the raw sequencing files are deposited in Sequencing Read Archive (SRA), we can use the SRA Toolkit to directly transfer data from cloud server to local/remote host. \n\n### Sequencing Run Identifiers\n\nBefore we can proceed with the download, SRA Toolkit needs the sequencing run identifiers for each sample, which typically has a prefix starting with \"SRR\". With multi-omic data, one sequencing run identifier will be generated for each sequencing library (GEX, ADT, BCR, TCR etc.). To retrieve the relevant identifiers, we downloaded the [[SraRunTable.txt]](https://www.ncbi.nlm.nih.gov/Traces/study/?acc=PRJNA1040888&o=acc_s%3Aa) file  for this study from NIH SRA Run Selector.\n\nAs you can see from the SraRunTable.txt file below, sequencing run identifiers and BioProject IDs are stored in the \\<Run\\> and \\<BioProject\\> columns. Next we will get the relevant sequencing run identifiers from the SraRunTable.txt file below and store these as a .txt file.\n\n### Download with SRA Toolkit\nTo download each sequencing library with run identifier, we used the fasterq-dump command from SRA Toolkit with parallelization to speed up the process of download. Adding the --split-files argument is essential for majority 10X sequencing, as downstream pipeline requires forward and reverse strand reads to be kept in separate fastq files. Below is a bash script to perform the download.\n\nThe fastq files are now downloaded to the following directory.\n\n## Multi-Pipeline Configurations\nWe have setup a reference pipeline/system [see [GitHub]()] to run cellranger-multi (V7.0.1). Below are the purpose of each file :\n  \n> * batch.sh - a bash script to setup config.csv and multi.sh for each sequencing sample\n> * batch_id.txt - a txt file containing names of each sequencing sample\n> * config.csv - configuration file for cellranger-multi [see [cellranger-multi]()]\n> * fastqformat.sh - rename fastq files for cellranger [see [cellranger fastq names]()]\n> * features_reference.csv - a reference configuration file for feature barcoding [see [feature barcoding]())]\n> * library.csv - a reference configuration file for config.csv [library] section\n> * multi.sh - a bash script to run cellranger-multi command\n> * tcrgd_primers.txt - default TCR-GD primer (5P v1.1) library [see [TCR-GD primers](https://kb.10xgenomics.com/hc/en-us/articles/360015793931-Can-I-detect-T-cells-with-gamma-delta-chains-in-my-V-D-J-data)]\n\nOutline below are the steps to run cellranger-multi for multiple sequencing samples with the system :  \n\n> 1. Rename fastq files to appropriate names with \"fastqformat.sh\"\n> 2. Specify sequencing sample names in \"batch_id.txt\" file\n> 3. Set up \"config.csv\" and specify paths for reference genomes\n> 4. Set correct oligo tag/sequence for \"feature_reference.csv\" if necesary\n> 5. Set correct library paths for \"library.csv\" if necesary\n> 6. Modify script and run \"source batch.sh\" to setup scripts per sample\n> 7. Final check and run \"sbatch */multi.sh\" to submit jobs\n\n### <font color='grey'>Step1 -</font> fastqformat.sh {.unnumbered}\nFor cellranger to read the fastq files properly, the names of the fastq files need modification. To do so the fastqformat.sh script does the renaming automatically for 10X fastqs downloaded from SRA.\n\n@SRR26844711.1 A01581:168:HCWFHDRX2:1:2101:1108:1000 length=28  \nGNCCTCAAGCTTTGGTTCGTTAGCGTCT  \n+SRR26844711.1 A01581:168:HCWFHDRX2:1:2101:1108:1000 length=28  \nF#FFFFFFFFF:FFFFFFFFFFFFFF,,  \n@SRR26844711.2 A01581:168:HCWFHDRX2:1:2101:1127:1000 length=28  \n\n@SRR26844711.1 A01581:168:HCWFHDRX2:1:2101:1108:1000 length=90  \nNAGCTCCGTCCTCCGAATCATGTTGGTAAACACGCCCATATAAGAAAACGCTAACGAACCAAAGCTTGAGGACAGATCGGAAGAGAGTCG  \n+SRR26844711.1 A01581:168:HCWFHDRX2:1:2101:1108:1000 length=90  \n#FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF:,:FFFFFFFFFFFFFFFFFFFFFFFFF:FFFFFFFFFFFFFFF,FFFFFFFFFF,  \n@SRR26844711.2 A01581:168:HCWFHDRX2:1:2101:1127:1000 length=90  \n\n@SRR26844710.1 A01581:167:HCG2TDMXY:1:1101:1262:1016 length=10  \nNCAGTAACTA  \n+SRR26844710.1 A01581:167:HCG2TDMXY:1:1101:1262:1016 length=10  \n#F:FFFFFFF  \n@SRR26844710.2 A01581:167:HCG2TDMXY:1:1101:1606:1016 length=10  \n  \n@SRR26844710.1 A01581:167:HCG2TDMXY:1:1101:1262:1016 length=28  \nANGGCCATCGTTACAGAGCCTCAATCTT  \n+SRR26844710.1 A01581:167:HCG2TDMXY:1:1101:1262:1016 length=28  \nF#FFFFFFFFFFFFFFFFFFFFFFFFFF  \n@SRR26844710.2 A01581:167:HCG2TDMXY:1:1101:1606:1016 length=28  \n  \n@SRR26844710.1 A01581:167:HCG2TDMXY:1:1101:1262:1016 length=90  \nNTTTGAACACTCTAATTTTTTCAAAGTAAACGCTTCGGGCCCCGCGGGACACTCAGCTAAGAGCATCGAGGGGGCGCCGAGAGGCAAGGG  \n+SRR26844710.1 A01581:167:HCG2TDMXY:1:1101:1262:1016 length=90  \n#FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF:FF:FFFFFFFFFFFFFFFFFFFFFFFFFFFF  \n@SRR26844710.2 A01581:167:HCG2TDMXY:1:1101:1606:1016 length=90  \n\n### <font color='grey'>Step2 -</font> batch_id.txt {.unnumbered}\nSpecify sequencing sample names (CV10, CV12) in \"batch_id.txt\" file.\n\n### <font color='grey'>Step3 -</font> configure.csv {.unnumbered}\nSet paths for human reference genomes for GEX and VDJ libraries for \"config.csv\" file. This \"config.csv\" template file was retrieved from [CellRanger config.csv]() and has been modified to run our pipeline. The reference genome files are required for the cellranger-multi pipeline and can be pre-installed following the steps in the [build 10X reference]() link.\n\n:::{.callout-warning}\nPlease do not change the number of lines in the script as this is critical for Step 5 to run properly.\n:::\n\nWe will leave the references in [feature barcode] and [libraries] as empty in the \"config.csv\", as we will define these paths with \"library.csv\" and \"feature_reference.csv\" below.\n\n### <font color='grey'>Step4 -</font> feature_reference.csv {.unnumbered}\nNext we will set the correct oligo tag/sequence for \"feature_reference.csv\" for cellranger-multi to process and quantify the oligo reads properly. Below is an example of feature_reference.csv.\n\nSince CITEseq & cell hashing library was prepared for the sequencing samples, information of the antibody used and their oligo sequence was retrieved from the SRA accession of this study. We will make one feature_reference.csv file for each sequencing sample to avoid mixing up, as the same hashtag oligo was used for different donors in different sequencing runs.\n\n### <font color='grey'>Step5 -</font> library.csv {.unnumbered}\nNow we will create library.csv files to configure the \"config.csv\" file for each sequencing sample. Below are the specific columns required for \"library.csv\"\n\n> [libraries]  \n> fastq_id,fastqs,lanes,feature_types\n\nView SRA metadata again from [@sec-sra] and modify dataframe to library.csv format.\n\n### <font color='grey'>Step6 -</font> batch.sh {.unnumbered}\nNext we will need to create and modify each individual multi.sh and config.csv file for each sequencing sample, which can be done by running the \"batch.sh\" script. The script will perform the following :  \n> 1. make a subdirectory for each sequencing sample in a pre-defined cellranger log directory.\n> 2. copy \"multi.sh\" script into each sequencing sample subdirectory and modify cellranger output directory when multi.sh is ran\n> 3. copy \"config.csv\" file into  each sequencing sample subdirectory and add \"library.csv\" and \"feature_reference.csv\" contents to \"config.csv\"\n\n### <font color='grey'>Step7 -</font> multi.sh {.unnumbered}\nAfter confirming that all the files are properly set up, we can run the multi.sh scripts for each sequencing sample.\n\n## Session Info {.unnumbered}\n","srcMarkdownNoYaml":"\n\n## Motivation {.unnumbered}\nIntroduction to CellRanger\n\n## Retrieve Raw Sequencing Files\n\nIn this section, we will download the relevant sequencing samples (CV10, CV12) highlighted in [@sec-Introduction] with the respective BioProject ID : \n[PRJNA1040901]() & [PRJNA1040899](). Since the raw sequencing files are deposited in Sequencing Read Archive (SRA), we can use the SRA Toolkit to directly transfer data from cloud server to local/remote host. \n\n### Sequencing Run Identifiers\n\nBefore we can proceed with the download, SRA Toolkit needs the sequencing run identifiers for each sample, which typically has a prefix starting with \"SRR\". With multi-omic data, one sequencing run identifier will be generated for each sequencing library (GEX, ADT, BCR, TCR etc.). To retrieve the relevant identifiers, we downloaded the [[SraRunTable.txt]](https://www.ncbi.nlm.nih.gov/Traces/study/?acc=PRJNA1040888&o=acc_s%3Aa) file  for this study from NIH SRA Run Selector.\n\nAs you can see from the SraRunTable.txt file below, sequencing run identifiers and BioProject IDs are stored in the \\<Run\\> and \\<BioProject\\> columns. Next we will get the relevant sequencing run identifiers from the SraRunTable.txt file below and store these as a .txt file.\n\n### Download with SRA Toolkit\nTo download each sequencing library with run identifier, we used the fasterq-dump command from SRA Toolkit with parallelization to speed up the process of download. Adding the --split-files argument is essential for majority 10X sequencing, as downstream pipeline requires forward and reverse strand reads to be kept in separate fastq files. Below is a bash script to perform the download.\n\nThe fastq files are now downloaded to the following directory.\n\n## Multi-Pipeline Configurations\nWe have setup a reference pipeline/system [see [GitHub]()] to run cellranger-multi (V7.0.1). Below are the purpose of each file :\n  \n> * batch.sh - a bash script to setup config.csv and multi.sh for each sequencing sample\n> * batch_id.txt - a txt file containing names of each sequencing sample\n> * config.csv - configuration file for cellranger-multi [see [cellranger-multi]()]\n> * fastqformat.sh - rename fastq files for cellranger [see [cellranger fastq names]()]\n> * features_reference.csv - a reference configuration file for feature barcoding [see [feature barcoding]())]\n> * library.csv - a reference configuration file for config.csv [library] section\n> * multi.sh - a bash script to run cellranger-multi command\n> * tcrgd_primers.txt - default TCR-GD primer (5P v1.1) library [see [TCR-GD primers](https://kb.10xgenomics.com/hc/en-us/articles/360015793931-Can-I-detect-T-cells-with-gamma-delta-chains-in-my-V-D-J-data)]\n\nOutline below are the steps to run cellranger-multi for multiple sequencing samples with the system :  \n\n> 1. Rename fastq files to appropriate names with \"fastqformat.sh\"\n> 2. Specify sequencing sample names in \"batch_id.txt\" file\n> 3. Set up \"config.csv\" and specify paths for reference genomes\n> 4. Set correct oligo tag/sequence for \"feature_reference.csv\" if necesary\n> 5. Set correct library paths for \"library.csv\" if necesary\n> 6. Modify script and run \"source batch.sh\" to setup scripts per sample\n> 7. Final check and run \"sbatch */multi.sh\" to submit jobs\n\n### <font color='grey'>Step1 -</font> fastqformat.sh {.unnumbered}\nFor cellranger to read the fastq files properly, the names of the fastq files need modification. To do so the fastqformat.sh script does the renaming automatically for 10X fastqs downloaded from SRA.\n\n@SRR26844711.1 A01581:168:HCWFHDRX2:1:2101:1108:1000 length=28  \nGNCCTCAAGCTTTGGTTCGTTAGCGTCT  \n+SRR26844711.1 A01581:168:HCWFHDRX2:1:2101:1108:1000 length=28  \nF#FFFFFFFFF:FFFFFFFFFFFFFF,,  \n@SRR26844711.2 A01581:168:HCWFHDRX2:1:2101:1127:1000 length=28  \n\n@SRR26844711.1 A01581:168:HCWFHDRX2:1:2101:1108:1000 length=90  \nNAGCTCCGTCCTCCGAATCATGTTGGTAAACACGCCCATATAAGAAAACGCTAACGAACCAAAGCTTGAGGACAGATCGGAAGAGAGTCG  \n+SRR26844711.1 A01581:168:HCWFHDRX2:1:2101:1108:1000 length=90  \n#FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF:,:FFFFFFFFFFFFFFFFFFFFFFFFF:FFFFFFFFFFFFFFF,FFFFFFFFFF,  \n@SRR26844711.2 A01581:168:HCWFHDRX2:1:2101:1127:1000 length=90  \n\n@SRR26844710.1 A01581:167:HCG2TDMXY:1:1101:1262:1016 length=10  \nNCAGTAACTA  \n+SRR26844710.1 A01581:167:HCG2TDMXY:1:1101:1262:1016 length=10  \n#F:FFFFFFF  \n@SRR26844710.2 A01581:167:HCG2TDMXY:1:1101:1606:1016 length=10  \n  \n@SRR26844710.1 A01581:167:HCG2TDMXY:1:1101:1262:1016 length=28  \nANGGCCATCGTTACAGAGCCTCAATCTT  \n+SRR26844710.1 A01581:167:HCG2TDMXY:1:1101:1262:1016 length=28  \nF#FFFFFFFFFFFFFFFFFFFFFFFFFF  \n@SRR26844710.2 A01581:167:HCG2TDMXY:1:1101:1606:1016 length=28  \n  \n@SRR26844710.1 A01581:167:HCG2TDMXY:1:1101:1262:1016 length=90  \nNTTTGAACACTCTAATTTTTTCAAAGTAAACGCTTCGGGCCCCGCGGGACACTCAGCTAAGAGCATCGAGGGGGCGCCGAGAGGCAAGGG  \n+SRR26844710.1 A01581:167:HCG2TDMXY:1:1101:1262:1016 length=90  \n#FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF:FF:FFFFFFFFFFFFFFFFFFFFFFFFFFFF  \n@SRR26844710.2 A01581:167:HCG2TDMXY:1:1101:1606:1016 length=90  \n\n### <font color='grey'>Step2 -</font> batch_id.txt {.unnumbered}\nSpecify sequencing sample names (CV10, CV12) in \"batch_id.txt\" file.\n\n### <font color='grey'>Step3 -</font> configure.csv {.unnumbered}\nSet paths for human reference genomes for GEX and VDJ libraries for \"config.csv\" file. This \"config.csv\" template file was retrieved from [CellRanger config.csv]() and has been modified to run our pipeline. The reference genome files are required for the cellranger-multi pipeline and can be pre-installed following the steps in the [build 10X reference]() link.\n\n:::{.callout-warning}\nPlease do not change the number of lines in the script as this is critical for Step 5 to run properly.\n:::\n\nWe will leave the references in [feature barcode] and [libraries] as empty in the \"config.csv\", as we will define these paths with \"library.csv\" and \"feature_reference.csv\" below.\n\n### <font color='grey'>Step4 -</font> feature_reference.csv {.unnumbered}\nNext we will set the correct oligo tag/sequence for \"feature_reference.csv\" for cellranger-multi to process and quantify the oligo reads properly. Below is an example of feature_reference.csv.\n\nSince CITEseq & cell hashing library was prepared for the sequencing samples, information of the antibody used and their oligo sequence was retrieved from the SRA accession of this study. We will make one feature_reference.csv file for each sequencing sample to avoid mixing up, as the same hashtag oligo was used for different donors in different sequencing runs.\n\n### <font color='grey'>Step5 -</font> library.csv {.unnumbered}\nNow we will create library.csv files to configure the \"config.csv\" file for each sequencing sample. Below are the specific columns required for \"library.csv\"\n\n> [libraries]  \n> fastq_id,fastqs,lanes,feature_types\n\nView SRA metadata again from [@sec-sra] and modify dataframe to library.csv format.\n\n### <font color='grey'>Step6 -</font> batch.sh {.unnumbered}\nNext we will need to create and modify each individual multi.sh and config.csv file for each sequencing sample, which can be done by running the \"batch.sh\" script. The script will perform the following :  \n> 1. make a subdirectory for each sequencing sample in a pre-defined cellranger log directory.\n> 2. copy \"multi.sh\" script into each sequencing sample subdirectory and modify cellranger output directory when multi.sh is ran\n> 3. copy \"config.csv\" file into  each sequencing sample subdirectory and add \"library.csv\" and \"feature_reference.csv\" contents to \"config.csv\"\n\n### <font color='grey'>Step7 -</font> multi.sh {.unnumbered}\nAfter confirming that all the files are properly set up, we can run the multi.sh scripts for each sequencing sample.\n\n## Session Info {.unnumbered}\n"},"formats":{"html":{"identifier":{"display-name":"HTML","target-format":"html","base-format":"html"},"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":false,"echo":true,"output":true,"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":false,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"ipynb-shell-interactivity":null,"plotly-connected":true,"engine":"jupyter"},"render":{"keep-tex":false,"keep-typ":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":false,"code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":true,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-min-runs":1,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[],"notebook-links":true},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","toc":true,"number-sections":true,"number-offset":3,"output-file":"1.1_cellranger.html"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","other-links-title":"Other Links","code-links-title":"Code Links","launch-dev-container-title":"Launch Dev Container","launch-binder-title":"Launch Binder","article-notebook-label":"Article Notebook","notebook-preview-download":"Download Notebook","notebook-preview-download-src":"Download Source","notebook-preview-back":"Back to Article","manuscript-meca-bundle":"MECA Bundle","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","title-block-keywords":"Keywords","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","tools-share":"Share","tools-download":"Download","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-text-placeholder":"","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search-label":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-wordcount":"Word Count","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items","listing-page-words":"{0} words"},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.4.549","toc-expand":1,"fontsize":"0.9em","theme":["flatly"],"grid":{"sidebar-width":"350px","body-width":"1000px","margin-width":"400px","gutter-width":"1.5rem"},"monobackgroundcolor":"#f3f3f3","title":"CellRanger (Multi)","author":[{"name":"Matthew Hung"}],"date":"last-modified"},"extensions":{"book":{"multiFile":true}}}},"projectFormats":["html"]}